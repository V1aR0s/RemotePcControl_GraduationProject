// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.HelloRequest> __Marshaller_greet_HelloRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.HelloRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.HelloReply> __Marshaller_greet_HelloReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.HelloReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetRequest> __Marshaller_greet_GetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestReply> __Marshaller_greet_RequestReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetRequestCommandLink> __Marshaller_greet_SetRequestCommandLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetRequestCommandLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetRequestCommandLinkReply> __Marshaller_greet_SetRequestCommandLinkReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetRequestCommandLinkReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetPcStatusRequest> __Marshaller_greet_GetPcStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetPcStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetPcStatusReply> __Marshaller_greet_GetPcStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetPcStatusReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestRegulatorSetterRequest> __Marshaller_greet_RequestRegulatorSetterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestRegulatorSetterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestRegulatorSetterReply> __Marshaller_greet_RequestRegulatorSetterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestRegulatorSetterReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestRegulatorGetterRequest> __Marshaller_greet_RequestRegulatorGetterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestRegulatorGetterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestRegulatorGetterReply> __Marshaller_greet_RequestRegulatorGetterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestRegulatorGetterReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SendRunnigProgsListRequest> __Marshaller_greet_SendRunnigProgsListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SendRunnigProgsListRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SendRunnigProgsListReply> __Marshaller_greet_SendRunnigProgsListReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SendRunnigProgsListReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetRunnigProgsListRequest> __Marshaller_greet_GetRunnigProgsListRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetRunnigProgsListRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetRunnigProgsListReply> __Marshaller_greet_GetRunnigProgsListReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetRunnigProgsListReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetKillRunningProgrammNameRequest> __Marshaller_greet_SetKillRunningProgrammNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetKillRunningProgrammNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetKillRunningProgrammNameReply> __Marshaller_greet_SetKillRunningProgrammNameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetKillRunningProgrammNameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetKillRunningProgrammNameRequest> __Marshaller_greet_GetKillRunningProgrammNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetKillRunningProgrammNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetKillRunningProgrammNameReply> __Marshaller_greet_GetKillRunningProgrammNameReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetKillRunningProgrammNameReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetHardDrivesRequest> __Marshaller_greet_SetHardDrivesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetHardDrivesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetHardDrivesReply> __Marshaller_greet_SetHardDrivesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetHardDrivesReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetHardDrivesRequest> __Marshaller_greet_GetHardDrivesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetHardDrivesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetHardDrivesReply> __Marshaller_greet_GetHardDrivesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetHardDrivesReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetFileManagerWayRequest> __Marshaller_greet_SetFileManagerWayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetFileManagerWayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetFileManagerWayReply> __Marshaller_greet_SetFileManagerWayReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetFileManagerWayReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetFileManagerWayRequest> __Marshaller_greet_GetFileManagerWayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetFileManagerWayRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetFileManagerWayReply> __Marshaller_greet_GetFileManagerWayReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetFileManagerWayReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetDirectoryFilesRequest> __Marshaller_greet_SetDirectoryFilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetDirectoryFilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetDirectoryFilesReply> __Marshaller_greet_SetDirectoryFilesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetDirectoryFilesReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetDirectoryFilesRequest> __Marshaller_greet_GetDirectoryFilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetDirectoryFilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetDirectoryFilesReply> __Marshaller_greet_GetDirectoryFilesReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetDirectoryFilesReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetSoundInfoRequest> __Marshaller_greet_SetSoundInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetSoundInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.ReplyString> __Marshaller_greet_ReplyString = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.ReplyString.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetAudioDeviceInfoRequest> __Marshaller_greet_GetAudioDeviceInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetAudioDeviceInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetAudioDeviceInfoReply> __Marshaller_greet_GetAudioDeviceInfoReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetAudioDeviceInfoReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetSoundMauiRequest> __Marshaller_greet_SetSoundMauiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetSoundMauiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RequestId> __Marshaller_greet_RequestId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RequestId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetSoundSelectFromMauiReply> __Marshaller_greet_GetSoundSelectFromMauiReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetSoundSelectFromMauiReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetMonitorsInfoRequest> __Marshaller_greet_SetMonitorsInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetMonitorsInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetMonitorsInfoReply> __Marshaller_greet_GetMonitorsInfoReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetMonitorsInfoReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetRequestToMonitorCapture> __Marshaller_greet_SetRequestToMonitorCapture = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetRequestToMonitorCapture.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetSelectedMonitorReply> __Marshaller_greet_GetSelectedMonitorReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetSelectedMonitorReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.SetCaptureByteArrRequest> __Marshaller_greet_SetCaptureByteArrRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.SetCaptureByteArrRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.GetCaptureByteArrReply> __Marshaller_greet_GetCaptureByteArrReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.GetCaptureByteArrReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RegisterRequest> __Marshaller_greet_RegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RegisterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.RegisterReply> __Marshaller_greet_RegisterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.RegisterReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.LoginCheckRquest> __Marshaller_greet_LoginCheckRquest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.LoginCheckRquest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcServer.LoginCheckReply> __Marshaller_greet_LoginCheckReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcServer.LoginCheckReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply> __Method_SayHello = new grpc::Method<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_greet_HelloRequest,
        __Marshaller_greet_HelloReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply> __Method_SayHelloStream = new grpc::Method<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "SayHelloStream",
        __Marshaller_greet_HelloRequest,
        __Marshaller_greet_HelloReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetRequest, global::GrpcServer.RequestReply> __Method_GetRequestData = new grpc::Method<global::GrpcServer.GetRequest, global::GrpcServer.RequestReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRequestData",
        __Marshaller_greet_GetRequest,
        __Marshaller_greet_RequestReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetRequestCommandLink, global::GrpcServer.SetRequestCommandLinkReply> __Method_SendCommandLink = new grpc::Method<global::GrpcServer.SetRequestCommandLink, global::GrpcServer.SetRequestCommandLinkReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendCommandLink",
        __Marshaller_greet_SetRequestCommandLink,
        __Marshaller_greet_SetRequestCommandLinkReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetPcStatusRequest, global::GrpcServer.GetPcStatusReply> __Method_GetPcStatus = new grpc::Method<global::GrpcServer.GetPcStatusRequest, global::GrpcServer.GetPcStatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPcStatus",
        __Marshaller_greet_GetPcStatusRequest,
        __Marshaller_greet_GetPcStatusReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestRegulatorSetterRequest, global::GrpcServer.RequestRegulatorSetterReply> __Method_SetNowpageFromMAUI = new grpc::Method<global::GrpcServer.RequestRegulatorSetterRequest, global::GrpcServer.RequestRegulatorSetterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetNowpageFromMAUI",
        __Marshaller_greet_RequestRegulatorSetterRequest,
        __Marshaller_greet_RequestRegulatorSetterReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestRegulatorGetterRequest, global::GrpcServer.RequestRegulatorGetterReply> __Method_GetNowpageFromMAUI = new grpc::Method<global::GrpcServer.RequestRegulatorGetterRequest, global::GrpcServer.RequestRegulatorGetterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNowpageFromMAUI",
        __Marshaller_greet_RequestRegulatorGetterRequest,
        __Marshaller_greet_RequestRegulatorGetterReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SendRunnigProgsListRequest, global::GrpcServer.SendRunnigProgsListReply> __Method_SendRunnigProgs = new grpc::Method<global::GrpcServer.SendRunnigProgsListRequest, global::GrpcServer.SendRunnigProgsListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendRunnigProgs",
        __Marshaller_greet_SendRunnigProgsListRequest,
        __Marshaller_greet_SendRunnigProgsListReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetRunnigProgsListRequest, global::GrpcServer.GetRunnigProgsListReply> __Method_GetRunnigProgs = new grpc::Method<global::GrpcServer.GetRunnigProgsListRequest, global::GrpcServer.GetRunnigProgsListReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRunnigProgs",
        __Marshaller_greet_GetRunnigProgsListRequest,
        __Marshaller_greet_GetRunnigProgsListReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetKillRunningProgrammNameRequest, global::GrpcServer.SetKillRunningProgrammNameReply> __Method_SetRunnigProgrammkillName = new grpc::Method<global::GrpcServer.SetKillRunningProgrammNameRequest, global::GrpcServer.SetKillRunningProgrammNameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetRunnigProgrammkillName",
        __Marshaller_greet_SetKillRunningProgrammNameRequest,
        __Marshaller_greet_SetKillRunningProgrammNameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetKillRunningProgrammNameRequest, global::GrpcServer.GetKillRunningProgrammNameReply> __Method_GetRunnigProgrammkillName = new grpc::Method<global::GrpcServer.GetKillRunningProgrammNameRequest, global::GrpcServer.GetKillRunningProgrammNameReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRunnigProgrammkillName",
        __Marshaller_greet_GetKillRunningProgrammNameRequest,
        __Marshaller_greet_GetKillRunningProgrammNameReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetHardDrivesRequest, global::GrpcServer.SetHardDrivesReply> __Method_SetHardDrives = new grpc::Method<global::GrpcServer.SetHardDrivesRequest, global::GrpcServer.SetHardDrivesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetHardDrives",
        __Marshaller_greet_SetHardDrivesRequest,
        __Marshaller_greet_SetHardDrivesReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetHardDrivesRequest, global::GrpcServer.GetHardDrivesReply> __Method_GetHardDrives = new grpc::Method<global::GrpcServer.GetHardDrivesRequest, global::GrpcServer.GetHardDrivesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHardDrives",
        __Marshaller_greet_GetHardDrivesRequest,
        __Marshaller_greet_GetHardDrivesReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetFileManagerWayRequest, global::GrpcServer.SetFileManagerWayReply> __Method_SetFileManagerWay = new grpc::Method<global::GrpcServer.SetFileManagerWayRequest, global::GrpcServer.SetFileManagerWayReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetFileManagerWay",
        __Marshaller_greet_SetFileManagerWayRequest,
        __Marshaller_greet_SetFileManagerWayReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetFileManagerWayRequest, global::GrpcServer.GetFileManagerWayReply> __Method_GetFileManagerWay = new grpc::Method<global::GrpcServer.GetFileManagerWayRequest, global::GrpcServer.GetFileManagerWayReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFileManagerWay",
        __Marshaller_greet_GetFileManagerWayRequest,
        __Marshaller_greet_GetFileManagerWayReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetDirectoryFilesRequest, global::GrpcServer.SetDirectoryFilesReply> __Method_SetDirectoryFiles = new grpc::Method<global::GrpcServer.SetDirectoryFilesRequest, global::GrpcServer.SetDirectoryFilesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDirectoryFiles",
        __Marshaller_greet_SetDirectoryFilesRequest,
        __Marshaller_greet_SetDirectoryFilesReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetDirectoryFilesRequest, global::GrpcServer.GetDirectoryFilesReply> __Method_GetDirectoryFiles = new grpc::Method<global::GrpcServer.GetDirectoryFilesRequest, global::GrpcServer.GetDirectoryFilesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDirectoryFiles",
        __Marshaller_greet_GetDirectoryFilesRequest,
        __Marshaller_greet_GetDirectoryFilesReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetSoundInfoRequest, global::GrpcServer.ReplyString> __Method_SetSoundInfo = new grpc::Method<global::GrpcServer.SetSoundInfoRequest, global::GrpcServer.ReplyString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSoundInfo",
        __Marshaller_greet_SetSoundInfoRequest,
        __Marshaller_greet_ReplyString);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.GetAudioDeviceInfoRequest, global::GrpcServer.GetAudioDeviceInfoReply> __Method_GetSoundInfo = new grpc::Method<global::GrpcServer.GetAudioDeviceInfoRequest, global::GrpcServer.GetAudioDeviceInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSoundInfo",
        __Marshaller_greet_GetAudioDeviceInfoRequest,
        __Marshaller_greet_GetAudioDeviceInfoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetSoundMauiRequest, global::GrpcServer.ReplyString> __Method_SetSoundMaui = new grpc::Method<global::GrpcServer.SetSoundMauiRequest, global::GrpcServer.ReplyString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSoundMaui",
        __Marshaller_greet_SetSoundMauiRequest,
        __Marshaller_greet_ReplyString);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetSoundSelectFromMauiReply> __Method_GetSoundSelectFromMaui = new grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetSoundSelectFromMauiReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSoundSelectFromMaui",
        __Marshaller_greet_RequestId,
        __Marshaller_greet_GetSoundSelectFromMauiReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetMonitorsInfoRequest, global::GrpcServer.ReplyString> __Method_SetMonitorsInfo = new grpc::Method<global::GrpcServer.SetMonitorsInfoRequest, global::GrpcServer.ReplyString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetMonitorsInfo",
        __Marshaller_greet_SetMonitorsInfoRequest,
        __Marshaller_greet_ReplyString);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetMonitorsInfoReply> __Method_GetMonitorsInfo = new grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetMonitorsInfoReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMonitorsInfo",
        __Marshaller_greet_RequestId,
        __Marshaller_greet_GetMonitorsInfoReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetRequestToMonitorCapture, global::GrpcServer.ReplyString> __Method_CommandRequestToMonitorCapture = new grpc::Method<global::GrpcServer.SetRequestToMonitorCapture, global::GrpcServer.ReplyString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CommandRequestToMonitorCapture",
        __Marshaller_greet_SetRequestToMonitorCapture,
        __Marshaller_greet_ReplyString);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetSelectedMonitorReply> __Method_GetSelectedMonitor = new grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetSelectedMonitorReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSelectedMonitor",
        __Marshaller_greet_RequestId,
        __Marshaller_greet_GetSelectedMonitorReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.SetCaptureByteArrRequest, global::GrpcServer.ReplyString> __Method_SetCaptureByteArr = new grpc::Method<global::GrpcServer.SetCaptureByteArrRequest, global::GrpcServer.ReplyString>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCaptureByteArr",
        __Marshaller_greet_SetCaptureByteArrRequest,
        __Marshaller_greet_ReplyString);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetCaptureByteArrReply> __Method_GetCaptureByteArr = new grpc::Method<global::GrpcServer.RequestId, global::GrpcServer.GetCaptureByteArrReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCaptureByteArr",
        __Marshaller_greet_RequestId,
        __Marshaller_greet_GetCaptureByteArrReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.RegisterRequest, global::GrpcServer.RegisterReply> __Method_RegisterAccout = new grpc::Method<global::GrpcServer.RegisterRequest, global::GrpcServer.RegisterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterAccout",
        __Marshaller_greet_RegisterRequest,
        __Marshaller_greet_RegisterReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcServer.LoginCheckRquest, global::GrpcServer.LoginCheckReply> __Method_LoginAccout = new grpc::Method<global::GrpcServer.LoginCheckRquest, global::GrpcServer.LoginCheckReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LoginAccout",
        __Marshaller_greet_LoginCheckRquest,
        __Marshaller_greet_LoginCheckReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Greeter</summary>
    public partial class GreeterClient : grpc::ClientBase<GreeterClient>
    {
      /// <summary>Creates a new client for Greeter</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GreeterClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Greeter that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GreeterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GreeterClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GreeterClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.HelloReply SayHello(global::GrpcServer.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.HelloReply SayHello(global::GrpcServer.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.HelloReply> SayHelloAsync(global::GrpcServer.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.HelloReply> SayHelloAsync(global::GrpcServer.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply> SayHelloStream(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloStream(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::GrpcServer.HelloRequest, global::GrpcServer.HelloReply> SayHelloStream(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_SayHelloStream, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestReply GetRequestData(global::GrpcServer.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRequestData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestReply GetRequestData(global::GrpcServer.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRequestData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestReply> GetRequestDataAsync(global::GrpcServer.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRequestDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestReply> GetRequestDataAsync(global::GrpcServer.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRequestData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetRequestCommandLinkReply SendCommandLink(global::GrpcServer.SetRequestCommandLink request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommandLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetRequestCommandLinkReply SendCommandLink(global::GrpcServer.SetRequestCommandLink request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendCommandLink, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetRequestCommandLinkReply> SendCommandLinkAsync(global::GrpcServer.SetRequestCommandLink request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendCommandLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetRequestCommandLinkReply> SendCommandLinkAsync(global::GrpcServer.SetRequestCommandLink request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendCommandLink, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetPcStatusReply GetPcStatus(global::GrpcServer.GetPcStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPcStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetPcStatusReply GetPcStatus(global::GrpcServer.GetPcStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPcStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetPcStatusReply> GetPcStatusAsync(global::GrpcServer.GetPcStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPcStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetPcStatusReply> GetPcStatusAsync(global::GrpcServer.GetPcStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPcStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestRegulatorSetterReply SetNowpageFromMAUI(global::GrpcServer.RequestRegulatorSetterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetNowpageFromMAUI(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestRegulatorSetterReply SetNowpageFromMAUI(global::GrpcServer.RequestRegulatorSetterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetNowpageFromMAUI, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestRegulatorSetterReply> SetNowpageFromMAUIAsync(global::GrpcServer.RequestRegulatorSetterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetNowpageFromMAUIAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestRegulatorSetterReply> SetNowpageFromMAUIAsync(global::GrpcServer.RequestRegulatorSetterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetNowpageFromMAUI, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestRegulatorGetterReply GetNowpageFromMAUI(global::GrpcServer.RequestRegulatorGetterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNowpageFromMAUI(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RequestRegulatorGetterReply GetNowpageFromMAUI(global::GrpcServer.RequestRegulatorGetterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNowpageFromMAUI, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestRegulatorGetterReply> GetNowpageFromMAUIAsync(global::GrpcServer.RequestRegulatorGetterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNowpageFromMAUIAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RequestRegulatorGetterReply> GetNowpageFromMAUIAsync(global::GrpcServer.RequestRegulatorGetterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNowpageFromMAUI, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SendRunnigProgsListReply SendRunnigProgs(global::GrpcServer.SendRunnigProgsListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendRunnigProgs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SendRunnigProgsListReply SendRunnigProgs(global::GrpcServer.SendRunnigProgsListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendRunnigProgs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SendRunnigProgsListReply> SendRunnigProgsAsync(global::GrpcServer.SendRunnigProgsListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendRunnigProgsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SendRunnigProgsListReply> SendRunnigProgsAsync(global::GrpcServer.SendRunnigProgsListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendRunnigProgs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetRunnigProgsListReply GetRunnigProgs(global::GrpcServer.GetRunnigProgsListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnigProgs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetRunnigProgsListReply GetRunnigProgs(global::GrpcServer.GetRunnigProgsListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRunnigProgs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetRunnigProgsListReply> GetRunnigProgsAsync(global::GrpcServer.GetRunnigProgsListRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnigProgsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetRunnigProgsListReply> GetRunnigProgsAsync(global::GrpcServer.GetRunnigProgsListRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRunnigProgs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetKillRunningProgrammNameReply SetRunnigProgrammkillName(global::GrpcServer.SetKillRunningProgrammNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetRunnigProgrammkillName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetKillRunningProgrammNameReply SetRunnigProgrammkillName(global::GrpcServer.SetKillRunningProgrammNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetRunnigProgrammkillName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetKillRunningProgrammNameReply> SetRunnigProgrammkillNameAsync(global::GrpcServer.SetKillRunningProgrammNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetRunnigProgrammkillNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetKillRunningProgrammNameReply> SetRunnigProgrammkillNameAsync(global::GrpcServer.SetKillRunningProgrammNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetRunnigProgrammkillName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetKillRunningProgrammNameReply GetRunnigProgrammkillName(global::GrpcServer.GetKillRunningProgrammNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnigProgrammkillName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetKillRunningProgrammNameReply GetRunnigProgrammkillName(global::GrpcServer.GetKillRunningProgrammNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRunnigProgrammkillName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetKillRunningProgrammNameReply> GetRunnigProgrammkillNameAsync(global::GrpcServer.GetKillRunningProgrammNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnigProgrammkillNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetKillRunningProgrammNameReply> GetRunnigProgrammkillNameAsync(global::GrpcServer.GetKillRunningProgrammNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRunnigProgrammkillName, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetHardDrivesReply SetHardDrives(global::GrpcServer.SetHardDrivesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHardDrives(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetHardDrivesReply SetHardDrives(global::GrpcServer.SetHardDrivesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetHardDrives, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetHardDrivesReply> SetHardDrivesAsync(global::GrpcServer.SetHardDrivesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHardDrivesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetHardDrivesReply> SetHardDrivesAsync(global::GrpcServer.SetHardDrivesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetHardDrives, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetHardDrivesReply GetHardDrives(global::GrpcServer.GetHardDrivesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHardDrives(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetHardDrivesReply GetHardDrives(global::GrpcServer.GetHardDrivesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHardDrives, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetHardDrivesReply> GetHardDrivesAsync(global::GrpcServer.GetHardDrivesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHardDrivesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetHardDrivesReply> GetHardDrivesAsync(global::GrpcServer.GetHardDrivesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHardDrives, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetFileManagerWayReply SetFileManagerWay(global::GrpcServer.SetFileManagerWayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFileManagerWay(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetFileManagerWayReply SetFileManagerWay(global::GrpcServer.SetFileManagerWayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetFileManagerWay, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetFileManagerWayReply> SetFileManagerWayAsync(global::GrpcServer.SetFileManagerWayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFileManagerWayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetFileManagerWayReply> SetFileManagerWayAsync(global::GrpcServer.SetFileManagerWayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetFileManagerWay, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetFileManagerWayReply GetFileManagerWay(global::GrpcServer.GetFileManagerWayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFileManagerWay(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetFileManagerWayReply GetFileManagerWay(global::GrpcServer.GetFileManagerWayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFileManagerWay, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetFileManagerWayReply> GetFileManagerWayAsync(global::GrpcServer.GetFileManagerWayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFileManagerWayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetFileManagerWayReply> GetFileManagerWayAsync(global::GrpcServer.GetFileManagerWayRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFileManagerWay, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetDirectoryFilesReply SetDirectoryFiles(global::GrpcServer.SetDirectoryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDirectoryFiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.SetDirectoryFilesReply SetDirectoryFiles(global::GrpcServer.SetDirectoryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDirectoryFiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetDirectoryFilesReply> SetDirectoryFilesAsync(global::GrpcServer.SetDirectoryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDirectoryFilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.SetDirectoryFilesReply> SetDirectoryFilesAsync(global::GrpcServer.SetDirectoryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDirectoryFiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetDirectoryFilesReply GetDirectoryFiles(global::GrpcServer.GetDirectoryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDirectoryFiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetDirectoryFilesReply GetDirectoryFiles(global::GrpcServer.GetDirectoryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDirectoryFiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetDirectoryFilesReply> GetDirectoryFilesAsync(global::GrpcServer.GetDirectoryFilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDirectoryFilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetDirectoryFilesReply> GetDirectoryFilesAsync(global::GrpcServer.GetDirectoryFilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDirectoryFiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetSoundInfo(global::GrpcServer.SetSoundInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSoundInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetSoundInfo(global::GrpcServer.SetSoundInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSoundInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetSoundInfoAsync(global::GrpcServer.SetSoundInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSoundInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetSoundInfoAsync(global::GrpcServer.SetSoundInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSoundInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetAudioDeviceInfoReply GetSoundInfo(global::GrpcServer.GetAudioDeviceInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSoundInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetAudioDeviceInfoReply GetSoundInfo(global::GrpcServer.GetAudioDeviceInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSoundInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetAudioDeviceInfoReply> GetSoundInfoAsync(global::GrpcServer.GetAudioDeviceInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSoundInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetAudioDeviceInfoReply> GetSoundInfoAsync(global::GrpcServer.GetAudioDeviceInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSoundInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetSoundMaui(global::GrpcServer.SetSoundMauiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSoundMaui(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetSoundMaui(global::GrpcServer.SetSoundMauiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSoundMaui, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetSoundMauiAsync(global::GrpcServer.SetSoundMauiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSoundMauiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetSoundMauiAsync(global::GrpcServer.SetSoundMauiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSoundMaui, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetSoundSelectFromMauiReply GetSoundSelectFromMaui(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSoundSelectFromMaui(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetSoundSelectFromMauiReply GetSoundSelectFromMaui(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSoundSelectFromMaui, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetSoundSelectFromMauiReply> GetSoundSelectFromMauiAsync(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSoundSelectFromMauiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetSoundSelectFromMauiReply> GetSoundSelectFromMauiAsync(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSoundSelectFromMaui, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetMonitorsInfo(global::GrpcServer.SetMonitorsInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetMonitorsInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetMonitorsInfo(global::GrpcServer.SetMonitorsInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetMonitorsInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetMonitorsInfoAsync(global::GrpcServer.SetMonitorsInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetMonitorsInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetMonitorsInfoAsync(global::GrpcServer.SetMonitorsInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetMonitorsInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetMonitorsInfoReply GetMonitorsInfo(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMonitorsInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetMonitorsInfoReply GetMonitorsInfo(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMonitorsInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetMonitorsInfoReply> GetMonitorsInfoAsync(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMonitorsInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetMonitorsInfoReply> GetMonitorsInfoAsync(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMonitorsInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString CommandRequestToMonitorCapture(global::GrpcServer.SetRequestToMonitorCapture request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommandRequestToMonitorCapture(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString CommandRequestToMonitorCapture(global::GrpcServer.SetRequestToMonitorCapture request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CommandRequestToMonitorCapture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> CommandRequestToMonitorCaptureAsync(global::GrpcServer.SetRequestToMonitorCapture request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommandRequestToMonitorCaptureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> CommandRequestToMonitorCaptureAsync(global::GrpcServer.SetRequestToMonitorCapture request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CommandRequestToMonitorCapture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetSelectedMonitorReply GetSelectedMonitor(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelectedMonitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetSelectedMonitorReply GetSelectedMonitor(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSelectedMonitor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetSelectedMonitorReply> GetSelectedMonitorAsync(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSelectedMonitorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetSelectedMonitorReply> GetSelectedMonitorAsync(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSelectedMonitor, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetCaptureByteArr(global::GrpcServer.SetCaptureByteArrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCaptureByteArr(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.ReplyString SetCaptureByteArr(global::GrpcServer.SetCaptureByteArrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCaptureByteArr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetCaptureByteArrAsync(global::GrpcServer.SetCaptureByteArrRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCaptureByteArrAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.ReplyString> SetCaptureByteArrAsync(global::GrpcServer.SetCaptureByteArrRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCaptureByteArr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetCaptureByteArrReply GetCaptureByteArr(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaptureByteArr(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.GetCaptureByteArrReply GetCaptureByteArr(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCaptureByteArr, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetCaptureByteArrReply> GetCaptureByteArrAsync(global::GrpcServer.RequestId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaptureByteArrAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.GetCaptureByteArrReply> GetCaptureByteArrAsync(global::GrpcServer.RequestId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCaptureByteArr, null, options, request);
      }
      /// <summary>
      ///rpc SetCaptureMonitor 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RegisterReply RegisterAccout(global::GrpcServer.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterAccout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc SetCaptureMonitor 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.RegisterReply RegisterAccout(global::GrpcServer.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterAccout, null, options, request);
      }
      /// <summary>
      ///rpc SetCaptureMonitor 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RegisterReply> RegisterAccoutAsync(global::GrpcServer.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterAccoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///rpc SetCaptureMonitor 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.RegisterReply> RegisterAccoutAsync(global::GrpcServer.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterAccout, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.LoginCheckReply LoginAccout(global::GrpcServer.LoginCheckRquest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAccout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcServer.LoginCheckReply LoginAccout(global::GrpcServer.LoginCheckRquest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LoginAccout, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.LoginCheckReply> LoginAccoutAsync(global::GrpcServer.LoginCheckRquest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LoginAccoutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcServer.LoginCheckReply> LoginAccoutAsync(global::GrpcServer.LoginCheckRquest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LoginAccout, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GreeterClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GreeterClient(configuration);
      }
    }

  }
}
#endregion
